plugins {
	id 'fabric-loom' version '1.1-SNAPSHOT'
	id 'maven-publish'
	id 'com.github.johnrengelman.shadow' version '7.0.0'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Uncomment the following line to enable the deprecated Fabric API modules. 
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"

	// broadcast deps
	// https://github.com/gstreamer-java/gst1-java-examples/blob/master/WebRTCSendRecv/build.gradle
	shadow(implementation('net.java.dev.jna:jna:5.10.0'))
	shadow(implementation('net.java.dev.jna:jna-platform:5.10.0'))
	shadow(implementation('org.freedesktop.gstreamer:gst1-java-core:1.4.0'))

	shadow(implementation('org.asynchttpclient:async-http-client:2.12.3'))
	shadow(implementation('com.fasterxml.jackson.core:jackson-databind:2.12.3'))
	shadow(implementation('org.slf4j:slf4j-jdk14:1.7.30'))

	shadow(implementation('org.json:json:20090211'))
	shadow(implementation('io.socket:socket.io-client:2.1.0'))
}

// thanks to https://github.com/Siphalor/spiceoffabric/blob/1.18/build.gradle
// for showing me how to shadow

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	archiveClassifier.set("sources")
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
	archiveClassifier.set("dev")
}

shadowJar {
	configurations = [project.configurations.shadow]
	archiveClassifier.set("dev")
}

remapJar {
	dependsOn(shadowJar)
	inputFile = tasks.shadowJar.archiveFile
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
